{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","key","fetch","process","then","res","json","result","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAuDeA,MArDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAuBA,OACE,qBAAKC,UAAmC,oBAAhBF,EAAQG,MAC1BH,EAAQG,KAAKC,KAAO,GACpB,WAEF,MAJJ,SAKE,iCACE,qBAAKF,UAAU,aAAf,SACE,uBAAOG,KAAK,OAAOH,UAAU,aAAaI,YAAY,YAAYC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QAAQA,MAAOZ,EAAOa,WA7BlH,SAAAH,GACA,UAAVA,EAAEI,KACHC,MAAM,GAAD,OAAIC,2CAAJ,qBAA+ChB,EAA/C,+BAA2EgB,qCAC/EC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,YA0BgB,oBAAhBC,EAAQG,KACjB,gCACE,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAQmB,KAAnC,KAA2CnB,EAAQoB,IAAIC,WACvD,qBAAKnB,UAAU,OAAf,SAzBU,SAACoB,GACnB,IAEIC,EADO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EAJS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAIzGL,EAAEM,YACjBC,EAAOP,EAAEQ,cACb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAkBHE,CAAY,IAAIC,WAEzC,sBAAK9B,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAuB+B,KAAKC,MAAMlC,EAAQG,KAAKC,MAA/C,WACA,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAG9C,SCrCIgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.0bcc394e.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = e => {\n    if(e.key === \"Enter\") {\n      fetch(`${process.env.REACT_APP_API_BASE}weather?q=${query}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`)\n      .then(res => res.json())\n      .then(result => {\n        setWeather(result);\n        setQuery('');\n      });\n    }\n  };\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return (\n    <div className={(typeof weather.main != \"undefined\")\n      ? ((weather.main.temp > 16)\n        ? 'app warm'\n        : 'app')\n      : 'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input type=\"text\" className=\"search-bar\" placeholder=\"Search...\" onChange={e => setQuery(e.target.value)} value={query} onKeyPress={search}\n          />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">{Math.round(weather.main.temp)}Â°C</div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n          </div>\n        </div>\n      ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}